"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[921],{743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=t(4848),a=t(8453);const r={title:"Consumer",sidebar_label:"Consumer",sidebar_position:3},i=void 0,o={id:"concepts/consumer",title:"Consumer",description:"Consumer is topic specific filter from a stream what store metadata about how an event in a stream is processed. With each event a consumer subscribes to, we spin up an consumer job for it an track what we did and what we will do with that event of the job",source:"@site/docs/concepts/003-consumer.md",sourceDirName:"concepts",slug:"/concepts/consumer",permalink:"/kanthorq/docs/concepts/consumer",draft:!1,unlisted:!1,editUrl:"https://github.com/kanthorlabs/kanthorq/tree/main/packages/create-docusaurus/templates/shared/docs/concepts/003-consumer.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Consumer",sidebar_label:"Consumer",sidebar_position:3},sidebar:"default",previous:{title:"Stream",permalink:"/kanthorq/docs/concepts/stream"}},c={},l=[{value:"Job State",id:"job-state",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Consumer is topic specific filter from a stream what store metadata about how an event in a stream is processed. With each event a consumer subscribes to, we spin up an consumer job for it an track what we did and what we will do with that event of the job"}),"\n",(0,s.jsx)(n.h2,{id:"job-state",children:"Job State"}),"\n",(0,s.jsx)(n.p,{children:"There are 6 states a job can have:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Available"}),": is the state for jobs that are immediately eligible to be worked."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Discarded"}),": is the state for jobs that have errored enough times that they're no longer eligible to be retried. Manual user invention is required for them to be tried again."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Cancelled"}),": is the state for jobs that have been manually cancelled by user request."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Completed"})," is the state for jobs that have successfully run to completion."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Running"}),": is the state for jobs that are actively running."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Retryable"})," is the state for jobs that have errored, but will be retried."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"We can categorize them into 2 groups"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Initial State"}),": The beginning state of a job before picking up to process. Currently we only have one state for this group: ",(0,s.jsx)(n.code,{children:"Available"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Transitional State"}),": Jobs will stay at this state for awhile before to be transformed to another state (which maybe as same as the current state based on the business logic). We have ",(0,s.jsx)(n.code,{children:"Running"})," and ",(0,s.jsx)(n.code,{children:"Retryable"})," now."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Final State"}),": Once the job is moved into this state, it will stay at that state forever and should not be changed anymore. We have totally three state: ",(0,s.jsx)(n.code,{children:"Discarded"}),", ",(0,s.jsx)(n.code,{children:"Cancelled"})," and ",(0,s.jsx)(n.code,{children:"Completed"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:"---\ntitle: State Transformation Flow\n---\nstateDiagram-v2\n    [*] --\x3e Available\n\n    Available --\x3e Running\n    Running --\x3e Running\n\n    Running --\x3e Retryable\n\n    Available --\x3e Cancelled\n    Running --\x3e Discarded\n    Running --\x3e Cancelled\n    Running --\x3e Completed\n\n    Retryable --\x3e Running\n\n    Discarded --\x3e [*]\n    Cancelled --\x3e [*]\n    Completed --\x3e [*]"})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);