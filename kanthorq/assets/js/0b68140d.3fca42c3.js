"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7824],{8695:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"default":[{"type":"link","label":"Quickstart","href":"/kanthorq/docs/quickstart","docId":"quickstart","unlisted":false},{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Event","href":"/kanthorq/docs/concepts/event","docId":"concepts/event","unlisted":false},{"type":"link","label":"Stream","href":"/kanthorq/docs/concepts/stream","docId":"concepts/stream","unlisted":false},{"type":"link","label":"Consumer","href":"/kanthorq/docs/concepts/consumer","docId":"concepts/consumer","unlisted":false}],"href":"/kanthorq/docs/category/concepts"},{"type":"category","label":"Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Handle jobs manually","href":"/kanthorq/docs/advanced/handle-jobs-manually","docId":"advanced/handle-jobs-manually","unlisted":false},{"type":"link","label":"KanthorQ as service","href":"/kanthorq/docs/advanced/kanthorq-as-service","docId":"advanced/kanthorq-as-service","unlisted":false},{"type":"link","label":"Scale for large dataset","href":"/kanthorq/docs/advanced/scale-for-large-dataset","docId":"advanced/scale-for-large-dataset","unlisted":false}],"href":"/kanthorq/docs/category/advanced"},{"type":"link","label":"Limits","href":"/kanthorq/docs/limits","docId":"limits","unlisted":false}]},"docs":{"advanced/handle-jobs-manually":{"id":"advanced/handle-jobs-manually","title":"Handle jobs manually","description":"TBD","sidebar":"default"},"advanced/kanthorq-as-service":{"id":"advanced/kanthorq-as-service","title":"KanthorQ as service","description":"TBD","sidebar":"default"},"advanced/scale-for-large-dataset":{"id":"advanced/scale-for-large-dataset","title":"Scale for large dataset","description":"TBD","sidebar":"default"},"concepts/consumer":{"id":"concepts/consumer","title":"Consumer","description":"Consumer is topic specific filter from a stream what store metadata about how an event in a stream is processed. With each event a consumer subscribes to, we spin up an consumer job for it an track what we did and what we will do with that event of the job","sidebar":"default"},"concepts/event":{"id":"concepts/event","title":"Event","description":"Event is an entity that represents a communication interface between publisher and subscriber in KanthorQ. It is similar with HTTP request in client-server commication over HTTP or proto definition in gRPC.","sidebar":"default"},"concepts/stream":{"id":"concepts/stream","title":"Stream","description":"Stream is a persistent, append-only event group that serves specific purposes. For example, you can create a stream with name order_notification to put all events that are relates to your order into that stream.","sidebar":"default"},"limits":{"id":"limits","title":"Limits","description":"This page lists all limits (or constraints) about KanthorQ system you should know","sidebar":"default"},"quickstart":{"id":"quickstart","title":"Quickstart","description":"This page has everything you need to start wokring with KanthorQ.","sidebar":"default"}}}}')}}]);